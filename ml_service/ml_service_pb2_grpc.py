# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ml_service_pb2 as ml__service__pb2


class MlModuleStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetModels = channel.unary_unary(
                '/MlModule/GetModels',
                request_serializer=ml__service__pb2.GetModelsRequest.SerializeToString,
                response_deserializer=ml__service__pb2.GetModelsResponse.FromString,
                )
        self.GetHyperParams = channel.unary_unary(
                '/MlModule/GetHyperParams',
                request_serializer=ml__service__pb2.GetHyperParamsRequest.SerializeToString,
                response_deserializer=ml__service__pb2.GetHyperParamsResponse.FromString,
                )
        self.PredictOrCreateModel = channel.unary_unary(
                '/MlModule/PredictOrCreateModel',
                request_serializer=ml__service__pb2.PredictOrCreateModelRequest.SerializeToString,
                response_deserializer=ml__service__pb2.PredictOrCreateModelResponse.FromString,
                )
        self.RemoveModel = channel.unary_unary(
                '/MlModule/RemoveModel',
                request_serializer=ml__service__pb2.RemoveModelRequest.SerializeToString,
                response_deserializer=ml__service__pb2.RemoveModelResponse.FromString,
                )


class MlModuleServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetModels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHyperParams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PredictOrCreateModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MlModuleServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetModels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModels,
                    request_deserializer=ml__service__pb2.GetModelsRequest.FromString,
                    response_serializer=ml__service__pb2.GetModelsResponse.SerializeToString,
            ),
            'GetHyperParams': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHyperParams,
                    request_deserializer=ml__service__pb2.GetHyperParamsRequest.FromString,
                    response_serializer=ml__service__pb2.GetHyperParamsResponse.SerializeToString,
            ),
            'PredictOrCreateModel': grpc.unary_unary_rpc_method_handler(
                    servicer.PredictOrCreateModel,
                    request_deserializer=ml__service__pb2.PredictOrCreateModelRequest.FromString,
                    response_serializer=ml__service__pb2.PredictOrCreateModelResponse.SerializeToString,
            ),
            'RemoveModel': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveModel,
                    request_deserializer=ml__service__pb2.RemoveModelRequest.FromString,
                    response_serializer=ml__service__pb2.RemoveModelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MlModule', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MlModule(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MlModule/GetModels',
            ml__service__pb2.GetModelsRequest.SerializeToString,
            ml__service__pb2.GetModelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHyperParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MlModule/GetHyperParams',
            ml__service__pb2.GetHyperParamsRequest.SerializeToString,
            ml__service__pb2.GetHyperParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PredictOrCreateModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MlModule/PredictOrCreateModel',
            ml__service__pb2.PredictOrCreateModelRequest.SerializeToString,
            ml__service__pb2.PredictOrCreateModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MlModule/RemoveModel',
            ml__service__pb2.RemoveModelRequest.SerializeToString,
            ml__service__pb2.RemoveModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
